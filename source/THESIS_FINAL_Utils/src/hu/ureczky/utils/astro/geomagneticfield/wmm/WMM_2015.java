package hu.ureczky.utils.astro.geomagneticfield.wmm;

// These coefficients and the formulae used below are from:
// NOAA Technical Report: The US/UK World Magnetic Model for 2015-2020
public class WMM_2015 implements WMM {
    
    private static final int BASE_YEAR = 2015; 
    
    private static final float[][] G_COEFF = new float[][] {
        {     0.0f},
        {-29438.5f, -1501.1f},
        { -2445.3f,  3012.5f,  1676.6f},
        {  1351.1f, -2352.3f,  1225.6f,   581.9f},
        {   907.2f,   813.7f,   120.3f,  -335.0f,    70.3f},
        {  -232.6f,   360.1f,   192.4f,  -141.0f,  -157.4f,     4.3f},
        {    69.5f,    67.4f,    72.8f,  -129.8f,   -29.0f,    13.2f,   -70.9f},
        {    81.6f,   -76.1f,    -6.8f,    51.9f,    15.0f,     9.3f,    -2.8f,     6.7f},
        {    24.0f,     8.6f,   -16.9f,    -3.2f,   -20.6f,    13.3f,    11.7f,   -16.0f,    -2.0f},
        {     5.4f,     8.8f,     3.1f,    -3.1f,     0.6f,   -13.3f,    -0.1f,     8.7f,    -9.1f,   -10.5f},
        {    -1.9f,    -6.5f,     0.2f,     0.6f,    -0.6f,     1.7f,    -0.7f,     2.1f,     2.3f,    -1.8f,    -3.6f},
        {     3.1f,    -1.5f,    -2.3f,     2.1f,    -0.9f,     0.6f,    -0.7f,     0.2f,     1.7f,    -0.2f,     0.4f,     3.5f},
        {    -2.0f,    -0.3f,     0.4f,     1.3f,    -0.9f,     0.9f,     0.1f,     0.5f,    -0.4f,    -0.4f,     0.2f,    -0.9f,     0.0f}
    };

    private static final float[][] H_COEFF = new float[][] {
        {     0.0f},
        {     0.0f,  4796.2f},
        {     0.0f, -2845.6f,  -642.0f},
        {     0.0f,  -115.3f,   245.0f,  -538.3f},
        {     0.0f,   283.4f,  -188.6f,   180.9f,  -329.5f},
        {     0.0f,    47.4f,   196.9f,  -119.4f,    16.1f,   100.1f},
        {     0.0f,   -20.7f,    33.2f,    58.8f,   -66.5f,     7.3f,    62.5f},
        {     0.0f,   -54.1f,   -19.4f,     5.6f,    24.4f,     3.3f,   -27.5f,    -2.3f},
        {     0.0f,    10.2f,   -18.1f,    13.2f,   -14.6f,    16.2f,     5.7f,    -9.1f,     2.2f},
        {     0.0f,   -21.6f,    10.8f,    11.7f,    -6.8f,    -6.9f,     7.8f,     1.0f,    -3.9f,     8.5f},
        {     0.0f,     3.3f,    -0.3f,     4.6f,     4.4f,    -7.9f,    -0.6f,    -4.1f,    -2.8f,    -1.1f,    -8.7f},
        {     0.0f,    -0.1f,     2.1f,    -0.7f,    -1.1f,     0.7f,    -0.2f,    -2.1f,    -1.5f,    -2.5f,    -2.0f,    -2.3f},
        {     0.0f,    -1.0f,     0.5f,     1.8f,    -2.2f,     0.3f,     0.7f,    -0.1f,     0.3f,     0.2f,    -0.9f,    -0.2f,     0.7f}
    };

    private static final float[][] DELTA_G = new float[][] {
        {     0.0f},
        {    10.7f,    17.9f},
        {    -8.6f,    -3.3f,     2.4f},
        {     3.1f,    -6.2f,    -0.4f,   -10.4f},
        {    -0.4f,     0.8f,    -9.2f,     4.0f,    -4.2f},
        {    -0.2f,     0.1f,    -1.4f,     0.0f,     1.3f,     3.8f},
        {    -0.5f,    -0.2f,    -0.6f,     2.4f,    -1.1f,     0.3f,     1.5f},
        {     0.2f,    -0.2f,    -0.4f,     1.3f,     0.2f,    -0.4f,    -0.9f,     0.3f},
        {     0.0f,     0.1f,    -0.5f,     0.5f,    -0.2f,     0.4f,     0.2f,    -0.4f,     0.3f},
        {     0.0f,    -0.1f,    -0.1f,     0.4f,    -0.5f,    -0.2f,     0.1f,     0.0f,    -0.2f,    -0.1f},
        {     0.0f,     0.0f,    -0.1f,     0.3f,    -0.1f,    -0.1f,    -0.1f,     0.0f,    -0.2f,    -0.1f,    -0.2f},
        {     0.0f,     0.0f,    -0.1f,     0.1f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f,    -0.1f,    -0.1f},
        {     0.1f,     0.0f,     0.0f,     0.1f,    -0.1f,     0.0f,     0.1f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f}
    };

    private static final float[][] DELTA_H = new float[][] {
        {     0.0f},     
        {     0.0f,   -26.8f},
        {     0.0f,   -27.1f,   -13.3f},
        {     0.0f,     8.4f,    -0.4f,     2.3f},
        {     0.0f,    -0.6f,     5.3f,     3.0f,    -5.3f},
        {     0.0f,     0.4f,     1.6f,    -1.1f,     3.3f,     0.1f},
        {     0.0f,     0.0f,    -2.2f,    -0.7f,     0.1f,     1.0f,     1.3f},
        {     0.0f,     0.7f,     0.5f,    -0.2f,    -0.1f,    -0.7f,     0.1f,     0.1f},
        {     0.0f,    -0.3f,     0.3f,     0.3f,     0.6f,    -0.1f,    -0.2f,     0.3f,     0.0f},
        {     0.0f,    -0.2f,    -0.1f,    -0.2f,     0.1f,     0.1f,     0.0f,    -0.2f,     0.4f,     0.3f},
        {     0.0f,     0.1f,    -0.1f,     0.0f,     0.0f,    -0.2f,     0.1f,    -0.1f,    -0.2f,     0.1f,    -0.1f},
        {     0.0f,     0.0f,     0.1f,     0.0f,     0.1f,     0.0f,     0.0f,     0.1f,     0.0f,    -0.1f,     0.0f,    -0.1f},
        {     0.0f,     0.0f,     0.0f,    -0.1f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f,     0.0f}
    };

    ///////////////////////////////
    // GETTERS for the constants //
    ///////////////////////////////
    
    @Override public int getBaseYear() { return BASE_YEAR; }
    @Override public float[][] getGCoeff() { return G_COEFF; }
    @Override public float[][] getHCoeff() { return H_COEFF; }
    @Override public float[][] getDeltaG() { return DELTA_G; }
    @Override public float[][] getDeltaH() { return DELTA_H; }
    
    /** Testcases from http://www.ngdc.noaa.gov/geomag/WMM/data/WMM2015/WMM2015testvalues.pdf */
    public static float[][] TESTCASES = new float[][] {       
        //  Date ,  Alt,   Lat,   Lon,        X,        Y,         Z,        H,        F,       I,      D 
        //yyyy.y , [km], [deg], [deg],     [nT],     [nT],      [nT],     [nT],     [nT],   [deg],  [deg] 
        { 2015.0f,   0f,   80f,    0f,  6627.1f,  -445.9f,  54432.3f,  6642.1f, 54836.0f,  83.04f, -3.85f },
        { 2015.0f,   0f,    0f,  120f, 39518.2f,   392.9f, -11252.4f, 39520.2f, 41090.9f, -15.89f,  0.57f },
        { 2015.0f,   0f,  -80f,  240f,  5797.3f, 15761.1f, -52919.1f, 16793.5f, 55519.8f, -72.39f, 69.81f },
        { 2015.0f, 100f,   80f,    0f,  6314.3f,  -471.6f,  52269.8f,  6331.9f, 52652.0f,  83.09f, -4.27f },
        { 2015.0f, 100f,    0f,  120f, 37535.6f,   364.4f, -10773.4f, 37537.3f, 39052.7f, -16.01f,  0.56f },
        { 2015.0f, 100f,  -80f,  240f,  5613.1f, 14791.5f, -50378.6f, 15820.7f, 52804.4f, -72.57f, 69.22f },
        { 2017.5f,   0f,   80f,    0f,  6599.4f,  -317.1f,  54459.2f,  6607.0f, 54858.5f,  83.08f, -2.75f },
        { 2017.5f,   0f,    0f,  120f, 39571.4f,   222.5f, -11030.1f, 39572.0f, 41080.5f, -15.57f,  0.32f },
        { 2017.5f,   0f,  -80f,  240f,  5873.8f, 15781.4f, -52687.9f, 16839.1f, 55313.4f, -72.28f, 69.58f },
        { 2017.5f, 100f,   80f,    0f,  6290.5f,  -348.5f,  52292.7f,  6300.1f, 52670.9f,  83.13f, -3.17f },
        { 2017.5f, 100f,    0f,  120f, 37585.5f,   209.5f, -10564.2f, 37586.1f, 39042.5f, -15.70f,  0.32f },
        { 2017.5f, 100f,  -80f,  240f,  5683.5f, 14808.8f, -50163.0f, 15862.0f, 52611.1f, -72.45f, 69.00f }
    };
    
}
